[build-system]
requires = ["setuptools>=65", "setuptools_scm[toml]>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "vodf_schema"
description = "FITS schema definitions for VODF"
readme = "README.md"
license = {text = "BSD-3-Clause"}
authors = [
    {name = "Karl Kosack", email = "karl.kosack@cea.fr"},
    {name = "Bruno Khelifi", email = "khelifi@apc.in2p3.fr"},
    {name = "Jutta Schnabel", email = "jutta.schnabel@fau.de"},
    {name = "Laura Olivera-Nieto", email = "Laura.Olivera-Nieto@mpi-hd.mpg.de"},
]

requires-python = ">=3.10"
dependencies = [
    "numpy",
    "fits_schema@git+https://github.com/VODF/fits_schema",
]

# needed for setuptools_scm, we don"t define a static version
dynamic = ["version"]

[project.urls]
repository = "https://github.com/VODF/fits_schema"
documentation = "https://github.com/VODF/fits_schema" # TODO: update with readthedocs when available

# Command-line scripts mapping the name of the tool to the import and function to execute
[project.scripts]

[tool.setuptools.packages.find]
where = ["src"]
exclude = ["vodf_schema._dev_version"]

[project.optional-dependencies]
test = [
  "pytest",
  "pytest-cov",
  "setuptools_scm",
]
doc = [
  "sphinx",
  "numpydoc",
  "sphinx-changelog",
  "pydata_sphinx_theme",
]
dev = [
  "setuptools_scm",
  "towncrier",
]

# we can use self-references to simplify all, needs to match project.name defined above
all = [
  "vodf_schema[test,doc,dev]",
]

[tool.setuptools_scm]
write_to = "src/vodf_schema/_version.py"

[tool.towncrier]
package = "vodf_schema"
directory = "docs/changes"
filename = "CHANGES.rst"
template = "docs/changes/template.rst"
underlines = ["-", "~", "^"]
# Let towncrier create proper links to the merged MR.
# By default, towncrier connects everything to issues.
# We rather want to connect it to merge request
issue_format = "`!{issue} <https://https://github.com/VODF/vodf_schema/issues/{issue}>`__"

[tool.towncrier.fragment.feature]
    name = "New Features"
    showcontent = true

[tool.towncrier.fragment.bugfix]
    name = "Bug Fixes"
    showcontent = true

[tool.towncrier.fragment.api]
    name = "API Changes"
    showcontent = true

[tool.towncrier.fragment.optimization]
    name = "Refactoring and Optimization"
    showcontent = true

[tool.towncrier.fragment.maintenance]
    name = "Maintenance"
    showcontent = true

[tool.ruff]
line-length = 88
target-version = "py310"


[tool.ruff.lint]
extend-select = [
    "I", # isort
    "N", # pep8 naming
    "D", # pydocstyle
    "NPY", # numpy
    "PT", # pytest
    "UP", # pyupgrade
    "COM", # flake8-commas
    "ISC", # implicit string concat rules
    "ICN", # import name conventions
    "G", # logging
]
ignore = [
    "COM812", # incompatible with ruff format
    "ISC001",# incompatible with ruff format
    "N801", # to allow __header__ classes
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.per-file-ignores]
# no documentation linting for test files
"**/tests/**" = ["D"]
"**/tests_*.py" = ["D"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.isort]
profile = "black"
line_length = 88

[tool.coverage.run]
relative_files = true
source = ["src"]
omit = [
    "src/vodf_schema/_version.py",
    "src/vodf_schema/_dev_version/*"
]

[tool.pytest.ini_options]
minversion = "7"
testpaths = ["src"]
log_cli_level = "INFO"
xfail_strict = true
# print summary of failed tests, force errors if settings are misspelled
addopts = ["-ra", "--strict-config", "--strict-markers"]
filterwarnings = [
    "error",
    "default:.*is shallow and may cause errors:UserWarning",
    # this warning should not be turned into an error, will happen e.g. when
    # using wheels compiled against an older version of numpy then is used at runtime
    # left as warning as the other direction (compiled vs. newer, using older numpy) is
    # problematic
    "default:numpy.ndarray size changed:RuntimeWarning",
]


[tool.repo-review]
select = ["PY", "PP", "PC"]
ignore = [
    "PY007", # we do not use tox for now
    "PC140", # mypy is not used
    "PC170", # pygrep is not used
    "PC180", # prettier is not used
    "PC111", # blacken-docs is not used
    "PC901", # no CI setup currently for updating pre-commit hooks
]

# fits files are sometimes mistaken for text files as they start with an ASCII header
# we need to ignore them here
[tool.codespell]
ignore-words-list = ["referenc",'livetime'] # codespell:ignore
skip = "*.fits,*.fits.fz"
